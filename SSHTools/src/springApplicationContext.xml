<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"> <!-- bean definitions here -->
	
	<!-- 版本有些需要带有版本号 -->
	<!-- http://www.springframework.org/schema/beans/spring-beans.xsd -->
	<!-- 这是一个检测aop的功能介绍 -->
	<!-- 首先配置我们的userDao -->
	<bean id="userDao" class="com.qq986945193.davidsshtools.dao.impl.SpringUserDaoImpl2"/>
	<!-- 编写切面类，并进行配置 -->
	<bean id = "aspectXmlUtils" class="com.qq986945193.davidsshtools.utils.AspectXmlUtils"/>
	<!-- 配置我们的AOP -->
	<aop:config>
		<!-- 配置切面类：切入点和通知（类型） -->
		<aop:aspect ref="aspectXmlUtils">
			<!-- 切入点的表达式 
				1. execution()	固定的，不能不写
				2. public 可以省略不写
				3. void，返回值可以出现 * 表示任意的返回值，返回值类型不能不写
				4. 可以使用 * 代替的，不能不编写的，简写方式：*..*方法
				5. *DaoImpl
				6. 方法 save*
				7. 方法的参数：
			-->
			<!-- 配置的前置通知，save方法执行之前，增强的方法会执行 -->
			<!-- 切入点的表达式：execution(public void com.qq986945193.davidsshtools.dao.impl.SpringUserDaoImpl2.save()) -->
			<!-- <aop:before method="log" pointcut="execution(public void com.qq986945193.davidsshtools.dao.impl.SpringUserDaoImpl2.save())"/> -->
		
			<!-- public 可以省略不写 -->
			<!-- <aop:before method="log" pointcut="execution(void com.qq986945193.davidsshtools.dao.impl.SpringUserDaoImpl2.save())"/> -->
			
			<!-- void，返回值可以出现 * 表示任意的返回值，返回值类型不能不写 -->
			<!-- <aop:before method="log" pointcut="execution(* com.qq986945193.davidsshtools.dao.impl.SpringUserDaoImpl2.save())"/> -->
			
			<!-- 包名可以使用 * 代替，不能不写 -->
			<!-- <aop:before method="log" pointcut="execution(* com.david.*.SpringUserDaoImpl2.save())"/> -->
			
			<!-- 包的简写的方式，任意的包的结构 -->
			<!-- <aop:before method="log" pointcut="execution(* *..*.SpringUserDaoImpl2.save())"/> -->
			
			<!-- 编写类的写法 -->
			<!-- <aop:before method="log" pointcut="execution(* *..*.*UserDaoImpl2.save())"/> -->
			
			<!-- 方法编写 -->
			<!-- <aop:before method="log" pointcut="execution(* *..*.*UserDaoImpl2.save*())"/> -->
			
			<!-- 参数列表：出现一个*，表示一个参数，任意参数使用 .. -->
			<!-- 在..之前执行 -->
			<!-- <aop:before method="log" pointcut="execution(* *..*.*UserDaoImpl2.save*(..))"/> -->
			<!-- 最终通知，不管程序是否异常均会执行 -->
			<!-- <aop:after method="after" pointcut="execution(* *..*.*UserDaoImpl2.save*(..))"/> -->
			<!-- 后置通知，如果程序出现异常，则不会再执行 -->
			<!-- <aop:after-returning method="afterReturn" pointcut="execution(* *..*.*UserDaoImpl2.save*(..))"/> -->
			<!-- 环绕通知：方法执行之前和方法执行之后进行通知 。需要手动调用执行方法-->
			<aop:around method="around" pointcut="execution(* *..*.*UserDaoImpl2.save*(..))"/>
		</aop:aspect>
	</aop:config>
</beans>
















