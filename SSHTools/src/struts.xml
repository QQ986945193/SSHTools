<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.3//EN"
	"http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>
		<!-- 编写常量 
	<constant name="struts.action.extension" value="do,,"></constant>
	-->
	<!-- 开启动态方法访问 -->
	<constant name="struts.enable.DynamicMethodInvocation" value="true"/>
	<!-- 引入其他的配置文件 -->
	<include file="com/qq986945193/davidsshtools/domain/struts_david.xml"/>


	<!-- 包结构  name 是包名称。 namespace访问路径。extends继承-->
	<package name="introduceAction1" namespace="/" extends="struts-default">
		<!--POJO类的方式。。。配置action 默认访问execute方法。(http://localhost/SSHTools/hello.action)-->
		<action name="hello" class="com.qq986945193.davidsshtools.action.IntroduceAction1"/>
		<!-- 配置一个方法的action -->
		<action name="sayHello" class = "com.qq986945193.davidsshtools.action.IntroduceAction1" method="sayHello">
			<!-- 这里也可以配置一个跳转的页面。路径的写法：在Struts2框架中，不管是转发还是重定向，都不用写项目名 -->
			<result name="ok">/struts2/jsps/msg.jsp</result>
		</action>
		<!-- 实现Action接口的方式,调用默认的方法execute() -->
		<action name="introduceAction2" class = "com.qq986945193.davidsshtools.action.IntroduceAction2">
			<result name = "login">/struts2/jsps/msg.jsp</result>
		</action>
		<!-- 继承ActionSupport类，调用默认的方法execute() -->
		<action name="introduceAction3" class= "com.qq986945193.davidsshtools.action.IntroduceAction3"/>
	</package>
	
	<!-- 演示action的访问三种方式，传统方式，通配符方式和动态方式 -->
	<package name="introduceMethod" namespace="/" extends="struts-default">
		<!-- 传统方式 -->
		<action name="save" class="com.qq986945193.davidsshtools.action.CustomerAction1" method="save"/>
		<action name="delete" class = "com.qq986945193.davidsshtools.action.CustomerAction1" method="delete"/>
		<!-- 通配符方式 -->
		<action name="linkman_*" class = "com.qq986945193.davidsshtools.action.LinkmanAction1" method="{1}">
			<result name="saveOk">/struts2/jsps/msg.jsp</result>
			<result name="deleteOk">/struts2/jsps/msg.jsp</result>
		</action>
		<!-- 动态访问的方式 -->
		<action name="user" class="com.qq986945193.davidsshtools.action.UserAction1"/>
	</package>
	
	<!-- 配置ssh项目的整合action -->
	<package name="sshtools" namespace="/" extends="struts-default">
		<!-- 登陆的action。使用通配符的方式配置 -->
		<action name="user_*" class="com.qq986945193.davidsshtools.action.UserAction" method="{1}">
			<result name="success">/index.htm</result>
			<result name = "login">/login.htm</result>
		</action>
	</package>
</struts>













